"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7679],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=u(n),f=r,d=c["".concat(p,".").concat(f)]||c[f]||s[f]||i;return n?a.createElement(d,l(l({ref:t},m),{},{components:n})):a.createElement(d,l({ref:t},m))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6903:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:6},l="Utility",o={unversionedId:"plouffe_lib/functions/utils",id:"plouffe_lib/functions/utils",title:"Utility",description:"- Importing Utils",source:"@site/docs/plouffe_lib/functions/utils.md",sourceDirName:"plouffe_lib/functions",slug:"/plouffe_lib/functions/utils",permalink:"/docs/plouffe_lib/functions/utils",draft:!1,editUrl:"https://github.com/plouffelul/plouffelul.github.io/tree/main/docs/plouffe_lib/functions/utils.md",tags:[],version:"current",lastUpdatedAt:1666315612,formattedLastUpdatedAt:"Oct 21, 2022",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"plouffe_lib",previous:{title:"Streaming",permalink:"/docs/plouffe_lib/functions/streaming"},next:{title:"Vehicle",permalink:"/docs/plouffe_lib/functions/vehicle"}},p={},u=[],m={toc:u};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"utility"},"Utility"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Importing Utils")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'  local Utils = exports.plouffe_lib:Get("Utils")\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Register a network only event (experimental)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Utils.RegisterNetEvent(name, fn)"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Params",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"---@param name string event name\n---@param fn function callback\n"))))))),(0,r.kt)("li",{parentName:"ul"},"Set a cooldown",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Utils.Cooldown(time,name)"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Params",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"---@param time number time in ms for the cooldown\n---@param name string cool down name\n"))))))),(0,r.kt)("li",{parentName:"ul"},"Is on cooldown",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Utils.IsOnCooldown(name)"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Params",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"---@param name string cool down name\n---@return boolean if the cool down is finished or not\n"))))))),(0,r.kt)("li",{parentName:"ul"},"Disable inputs timed",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Utils.DisableInputsTimed(inputs,time)"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Params",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"---@param inputs table the list of inputs to disable needs v.index and v.input\n---@param time int amount of time in ms\n---@return any void\n"))))))),(0,r.kt)("li",{parentName:"ul"},"Fade out",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Utils.FadeOut(duration,sync)"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Params",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"---@param duration int fadeout duration\n---@param sync boolean if true it will be run in a thread\n---@return any void\n"))))))),(0,r.kt)("li",{parentName:"ul"},"Fade in",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Utils.FadeIn(duration,sync)"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Params",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"---@param duration int fadein duration\n---@param sync boolean if true it will be run in a thread\n---@return any void\n"))))))),(0,r.kt)("li",{parentName:"ul"},"Blur ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Utils.Blur(duration, sync)"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Params",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"---@param duration int Blur duration this is used for a *stress* effect so it wont stay in\n---@param sync boolean if true it will be run in a thread\n---@return any void\n")))))))))}s.isMDXComponent=!0}}]);