"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5827],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=u(r),m=a,d=f["".concat(c,".").concat(m)]||f[m]||p[m]||o;return r?n.createElement(d,i(i({ref:t},s),{},{components:r})):n.createElement(d,i({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},374:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:4},i="Reaction",l={unversionedId:"plouffe_lib/interface/games/reaction",id:"plouffe_lib/interface/games/reaction",title:"Reaction",description:"- Importing only reaction if you didnt import interface before",source:"@site/docs/plouffe_lib/interface/games/reaction.md",sourceDirName:"plouffe_lib/interface/games",slug:"/plouffe_lib/interface/games/reaction",permalink:"/docs/plouffe_lib/interface/games/reaction",draft:!1,editUrl:"https://github.com/plouffelul/plouffelul.github.io/tree/main/docs/plouffe_lib/interface/games/reaction.md",tags:[],version:"current",lastUpdatedAt:1666314766,formattedLastUpdatedAt:"Oct 21, 2022",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"plouffe_lib",previous:{title:"Memory squares",permalink:"/docs/plouffe_lib/interface/games/memorysquares"},next:{title:"Moving squares",permalink:"/docs/plouffe_lib/interface/games/movingsquares"}},c={},u=[],s={toc:u};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"reaction"},"Reaction"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Importing only reaction if you didnt import interface before")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'    local Reaction = exports.plouffe_lib:Get("Interface", "Reaction")\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example usage")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"    local win = Reaction.New(data)\n    print(win)\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Data structure ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"    time : number -- time to complete the game in seconds\n    amount : number -- total amount of rows\n    speed : number -- the speed at wich the squares will move lower = faster\n    errors : number -- Allowed number of errors\n    clickTimer : number -- in MS the amount of time allowed to click the square\n    wins : number -- the required of 'Good clicks' to win\n    delay : delay -- delay before the game starts\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Test command if the lib is in debug mode ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"testReaction\n")))}p.isMDXComponent=!0}}]);