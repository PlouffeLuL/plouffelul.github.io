"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8655],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(n),m=o,d=s["".concat(p,".").concat(m)]||s[m]||f[m]||a;return n?r.createElement(d,i(i({ref:t},u),{},{components:n})):r.createElement(d,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=s;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},6482:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:1},i="Encryption",l={unversionedId:"plouffe_lib/interface/games/encryption",id:"plouffe_lib/interface/games/encryption",title:"Encryption",description:"- Importing only encryption if you didnt import interface before",source:"@site/docs/plouffe_lib/interface/games/encryption.md",sourceDirName:"plouffe_lib/interface/games",slug:"/plouffe_lib/interface/games/encryption",permalink:"/docs/plouffe_lib/interface/games/encryption",draft:!1,editUrl:"https://github.com/plouffelul/plouffelul.github.io/tree/main/docs/plouffe_lib/interface/games/encryption.md",tags:[],version:"current",lastUpdatedAt:1666314766,formattedLastUpdatedAt:"Oct 21, 2022",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"plouffe_lib",previous:{title:"Importing Interface",permalink:"/docs/plouffe_lib/interface/importing"},next:{title:"Lines",permalink:"/docs/plouffe_lib/interface/games/lines"}},p={},c=[],u={toc:c};function f(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"encryption"},"Encryption"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Importing only encryption if you didnt import interface before")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'    local Encryption = exports.plouffe_lib:Get("Interface", "Encryption")\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Example usage")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"    local win = Encryption.New(data)\n    print(win)\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Data structure ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'    update : number -- <default is 12> The delay before each shuffle\n    string : string -- <default is "numbers"> can be one of thoses ["hieroglyphs", "chinese", "numbers", "symbols", "alphabet"]\n    maxTimer : number -- <default is 30> max amount of time to complete the game\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Test command if the lib is in debug mode ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"testEncryption\n")))}f.isMDXComponent=!0}}]);