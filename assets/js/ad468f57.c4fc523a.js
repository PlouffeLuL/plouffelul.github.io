"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[833],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=s(r),f=a,d=p["".concat(u,".").concat(f)]||p[f]||c[f]||o;return r?n.createElement(d,l(l({ref:t},m),{},{components:r})):n.createElement(d,l({ref:t},m))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=p;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},8102:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:3},l="Memory squares",i={unversionedId:"plouffe_lib/interface/games/memorysquares",id:"plouffe_lib/interface/games/memorysquares",title:"Memory squares",description:"- Importing only memory squares if you didnt import interface before",source:"@site/docs/plouffe_lib/interface/games/memorysquares.md",sourceDirName:"plouffe_lib/interface/games",slug:"/plouffe_lib/interface/games/memorysquares",permalink:"/docs/plouffe_lib/interface/games/memorysquares",draft:!1,editUrl:"https://github.com/plouffelul/plouffelul.github.io/tree/main/docs/plouffe_lib/interface/games/memorysquares.md",tags:[],version:"current",lastUpdatedAt:1666314766,formattedLastUpdatedAt:"Oct 21, 2022",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"plouffe_lib",previous:{title:"Lines",permalink:"/docs/plouffe_lib/interface/games/lines"},next:{title:"Reaction",permalink:"/docs/plouffe_lib/interface/games/reaction"}},u={},s=[],m={toc:s};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"memory-squares"},"Memory squares"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Importing only memory squares if you didnt import interface before")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'    local MemorySquares = exports.plouffe_lib:Get("Interface", "MemorySquares")\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example usage")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"    local win = MemorySquares.New(data)\n    print(win)\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Data structure ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"    time : number -- time to complete the game in seconds\n    amount : number -- if its 2 the game will be a 2x2\n    solutionAmount : number -- needs to be lower than the total squares\n    errors : number -- Allowed number of errors\n    delay : delay -- delay before the game starts\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Test command if the lib is in debug mode ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MemorySquares\n")))}c.isMDXComponent=!0}}]);