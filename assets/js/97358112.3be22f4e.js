"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9526],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=o.createContext({}),u=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return o.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(r),f=n,m=d["".concat(p,".").concat(f)]||d[f]||c[f]||a;return r?o.createElement(m,i(i({ref:t},s),{},{components:r})):o.createElement(m,i({ref:t},s))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8529:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var o=r(7462),n=(r(7294),r(3905));const a={sidebar_position:3},i="Exports",l={unversionedId:"plouffe-doorlock/exports",id:"plouffe-doorlock/exports",title:"Exports",description:"- The index data is the unique name/index you set the door with when registering it.",source:"@site/docs/plouffe-doorlock/exports.md",sourceDirName:"plouffe-doorlock",slug:"/plouffe-doorlock/exports",permalink:"/docs/plouffe-doorlock/exports",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Structure",permalink:"/docs/plouffe-doorlock/structure"},next:{title:"Plouffe - Fleeca",permalink:"/docs/category/plouffe---fleeca"}},p={},u=[],s={toc:u};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"exports"},"Exports"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The index data is the unique name/index you set the door with when registering it.")),(0,n.kt)("h1",{id:"client"},"Client"),(0,n.kt)("h1",{id:"openautomated"},"OpenAutomated"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"exports.plouffe_doorlock:OpenAutomated(index)")),(0,n.kt)("h1",{id:"server"},"Server"),(0,n.kt)("h1",{id:"updatedoorstate"},"UpdateDoorState"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},"  ---@param index string -- unique name/index you set the door with when registering it\n  ---@param state boolean -- lock = true, unlock = false\n  exports.plouffe_doorlock:UpdateDoorState(index, state)\n")),(0,n.kt)("h1",{id:"updatedoorstatetable"},"UpdateDoorStateTable"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},"  ---@param list array<string> -- array of indexes\n  ---@param state boolean -- lock = true, unlock = false\n  exports.plouffe_doorlock:UpdateDoorStateTable(list,state)\n")),(0,n.kt)("h1",{id:"registerdoor"},"RegisterDoor"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},"  ---@param name string -- index / name\n  ---@param data table -- use the appropriate data structure\n  ---@param isAutomated boolean -- if the door is an automated door or not\n  exports.plouffe_doorlock:RegisterDoor(name, data, isAutomated)\n")))}c.isMDXComponent=!0}}]);